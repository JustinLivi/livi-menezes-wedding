image: node:8.10

stages:
  - build
  - test
  - deploy

build_serverless:
  only:
    changes:
      - serverless/**/*
      - .gitlab-ci.yml
  stage: build
  cache:
    policy: push
    paths:
      - serverless/node_modules/
  script:
    - cd serverless
    - npm install
    - npm run build
  artifacts:
    paths:
      - serverless/build/
  tags:
    - docker

build_client:
  only:
    changes:
      - client/**/*
      - .gitlab-ci.yml
  stage: build
  cache:
    policy: push
    paths:
      - client/node_modules/
  script:
    - cd client
    - npm install
    - npm run build
  artifacts:
    paths:
      - client/build/
  tags:
    - docker

test_client:
  only:
    changes:
      - client/**/*
      - .gitlab-ci.yml
  stage: test
  cache:
    policy: pull
    paths:
      - client/node_modules/
  script:
    - cd client
    - npm install
    - npm test
  tags:
    - docker

test_serverless:
  only:
    changes:
      - serverless/**/*
      - .gitlab-ci.yml
  stage: test
  cache:
    policy: pull
    paths:
      - serverless/node_modules/
  script:
    - cd serverless
    - npm install
    - npm test
  tags:
    - docker

deploy_client:
  only:
    changes:
      - client/**/*
      - .gitlab-ci.yml
  stage: deploy
  cache:
    policy: pull
    paths:
      - client/node_modules/
  variables:
    TF_VAR_aws_access_key_id: '$AWS_ACCESS_KEY_ID'
    TF_VAR_aws_secret_access_key: '$AWS_SECRET_ACCESS_KEY'
    TF_VAR_cf_alias_zone_id: '$CF_ALIAS_ZONE_ID'
    TF_BACKEND_CONFIG: '$TF_BACKEND_CONFIG'
    TF_IN_AUTOMATION: 'true'
  image:
    name: hashicorp/terraform:light
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd client/terraform
    - echo $TF_BACKEND_CONFIG > backend.tfvars
    - terraform init -input=false -backend-config=backend.tfvars
    - terrafrom plan -input=false
    - terraform apply -input=false -auto-approve
  artifacts:
    paths:
      - client/build/
  tags:
    - docker

deploy_serverless:
  only:
    changes:
      - serverless/**/*
      - .gitlab-ci.yml
  stage: deploy
  cache:
    policy: pull
    paths:
      - serverless/node_modules/
  variables:
    AWS_ACCESS_KEY_ID: '$AWS_ACCESS_KEY_ID'
    AWS_SECRET_ACCESS_KEY: '$AWS_SECRET_ACCESS_KEY'
  script:
    - cd serverless
    - npm i -g serverless
    - sls deploy --stage prod --verbose
  tags:
    - docker
